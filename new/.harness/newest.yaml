pipeline:
    name: newest
    identifier: newest
    projectIdentifier: Org_01Project_01
    orgIdentifier: Organization01
    tags: {}
    properties:
        ci:
            codebase:
                connectorRef: githubnewconnector
                repoName: sample-dockerfile
                build: <+input>
    stages:
        - stage:
              name: build
              identifier: build
              description: ""
              type: CI
              spec:
                  cloneCodebase: true
                  infrastructure:
                      type: KubernetesHosted
                      spec:
                          identifier: k8s-hosted-infra
                  execution:
                      steps:
                          - step:
                                type: Run
                                name: Run
                                identifier: Run
                                spec:
                                    connectorRef: dockerconnect
                                    image: alpine
                                    shell: Sh
                                    command: echo "it's working"
        - stage:
              name: cd
              identifier: cd
              description: ""
              type: Deployment
              spec:
                  serviceConfig:
                      serviceRef: newservice
                      serviceDefinition:
                          spec:
                              variables: []
                              manifests:
                                  - manifest:
                                        identifier: new
                                        type: K8sManifest
                                        spec:
                                            store:
                                                type: Github
                                                spec:
                                                    connectorRef: githubnewconnector
                                                    gitFetchType: Branch
                                                    paths:
                                                        - app-deploy.yaml
                                                    repoName: sample-dockerfile
                                                    branch: main
                                            skipResourceVersioning: false
                              artifacts:
                                  primary:
                                      spec:
                                          connectorRef: dockerconnect
                                          imagePath: library/nginx
                                          tag: <+input>
                                      type: DockerRegistry
                          type: Kubernetes
                  infrastructure:
                      environmentRef: new_environment
                      infrastructureDefinition:
                          type: KubernetesDirect
                          spec:
                              connectorRef: account.Harness_Kubernetes_Cluster
                              namespace: harness-delegate-ng
                              releaseName: release-<+INFRA_KEY>
                      allowSimultaneousDeployments: false
                  execution:
                      steps:
                          - step:
                                name: Rollout Deployment
                                identifier: rolloutDeployment
                                type: K8sRollingDeploy
                                timeout: 10m
                                spec:
                                    skipDryRun: false
                      rollbackSteps:
                          - step:
                                name: Rollback Rollout Deployment
                                identifier: rollbackRolloutDeployment
                                type: K8sRollingRollback
                                timeout: 10m
                                spec: {}
              tags: {}
              failureStrategies:
                  - onFailure:
                        errors:
                            - AllErrors
                        action:
                            type: StageRollback
